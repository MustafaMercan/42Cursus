
#include <stdio.h>
#include <stdlib.h>

typedef struct s_list
{
    void            *content;
    struct s_list    *next;
}    t_list;
void    ft_lstadd_front(t_list **lst, t_list *new)
{
    new->next = (t_list*)malloc(sizeof(t_list));
    new->next = *lst;
    *lst = new;
}
t_list    *ft_lstnew(void *content)
{
    t_list    *ret;

    ret = malloc(sizeof(t_list));
    if (!ret)
        return (0);
    ret->content = content;
    ret->next = 0;
    return (ret);
}

void    ft_lstdelone(t_list *lst, void (*del)(void *))
{
    printf("test -> %s\n",(char*)lst->content);
    if (lst)
    {
        del(lst->content);
        free(lst);
    }
}

void del_test(void* arg1)
{
    printf("%s\n",(char*)arg1);
}


int main()
{
    t_list **header;

    header = (t_list**)malloc(sizeof(t_list*));

    t_list *test;
    t_list *test2;
    t_list *test3;
    
    

    char str[] = "mustafa";
    

    char str2[] = "mercan";

    char str3[] = "test";

    *header = ft_lstnew(str);
    
    
    test = ft_lstnew(str2);
    test2 = ft_lstnew(str3);

    ft_lstadd_front(header,test);

    ft_lstadd_front(header,test2);
    
    void (*asdf)(void *) = &del_test;

    ft_lstdelone(&test,asdf);

    


}

